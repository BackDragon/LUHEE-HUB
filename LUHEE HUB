local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()
local Window = Rayfield:CreateWindow({
   Name = "LUHEE",
   Icon = 0, -- Icon in Topbar. Can use Lucide Icons (string) or Roblox Image (number). 0 to use no icon (default).
   LoadingTitle = "Rayfield Interface Suite",
   LoadingSubtitle = "by DEW_KING",
   Theme = "Default", -- Check https://docs.sirius.menu/rayfield/configuration/themes

   DisableRayfieldPrompts = false,
   DisableBuildWarnings = false, -- Prevents Rayfield from warning when the script has a version mismatch with the interface

   ConfigurationSaving = {
      Enabled = true,
      FolderName = nil, -- Create a custom folder for your hub/game
      FileName = "Big Hub"
   },

   Discord = {
      Enabled = false, -- Prompt the user to join your Discord server if their executor supports it
      Invite = "noinvitelink", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ ABCD would be ABCD
      RememberJoins = true -- Set this to false to make them join the discord every time they load it up
   },

   KeySystem = false, -- Set this to true to use our key system
   KeySettings = {
      Title = "Untitled",
      Subtitle = "Key System",
      Note = "No method of obtaining the key is provided", -- Use this to tell the user how to get a key
      FileName = "Key", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
      SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script
      GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
      Key = {"Hello"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
   }
})
local Tab = Window:CreateTab("Main") 
local Section = Tab:CreateSection("Main stuff")
local Slider = Tab:CreateSlider({
   Name = "Slider Example",
   Range = {0, 100},
   Increment = 10,
   Suffix = "Bananas",
   CurrentValue = 10,
   Flag = "Slider1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
   -- The function that takes place when the slider changes
   -- The variable (Value) is a number which correlates to the value the slider is currently at
   end,
})
game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = 1000
local SettingsTab = Window:CreateTab("ตั้งค่าต่างๆ")

SettingsTab:CreateSlider({
    Name = "ปรับความเร็ว",
    Range = {16, 700},
    Increment = 1,
    Suffix = "Speed",
    CurrentValue = 16,
    Callback = function(Value)
        local humanoid = game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
        if humanoid then
            humanoid.WalkSpeed = Value
        end
    end
})

SettingsTab:CreateSlider({
    Name = "ปรับความสูงการกระโดด",
    Range = {50, 500},
    Increment = 10,
    Suffix = "Power",
    CurrentValue = 50,
    Callback = function(Value)
        local humanoid = game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
        if humanoid then
            humanoid.UseJumpPower = true
            humanoid.JumpPower = Value
        end
    end
})
local ESPTab = Window:CreateTab("ESP")

local ESP = {}
local espEnabled = false
local itemESPEnabled = false
local espObjects = {}
local itemObjects = {}

function ESP:createESP(player)
    if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
        local humanoidRootPart = player.Character.HumanoidRootPart

        local nameLabel = Instance.new("BillboardGui")
        nameLabel.Adornee = humanoidRootPart
        nameLabel.Size = UDim2.new(0, 200, 0, 50)
        nameLabel.StudsOffset = Vector3.new(0, 3, 0)
        nameLabel.MaxDistance = math.huge

        local nameText = Instance.new("TextLabel")
        nameText.Size = UDim2.new(1, 0, 1, 0)
        nameText.Text = player.Name
        nameText.TextColor3 = Color3.fromRGB(255, 0, 0)
        nameText.BackgroundTransparency = 1
        nameText.TextStrokeTransparency = 0
        nameText.TextScaled = true
        nameText.Font = Enum.Font.SourceSansBold
        nameText.Parent = nameLabel

        nameLabel.Parent = humanoidRootPart
        espObjects[player] = nameLabel

        player.CharacterRemoving:Connect(function()
            if espObjects[player] then
                espObjects[player]:Destroy()
                espObjects[player] = nil
            end
        end)
    end
end

function ESP:createItemESP(item)
    if item:IsA("BasePart") and item.Parent:FindFirstChild("TouchInterest") then
        local nameLabel = Instance.new("BillboardGui")
        nameLabel.Adornee = item
        nameLabel.Size = UDim2.new(0, 150, 0, 50)
        nameLabel.StudsOffset = Vector3.new(0, 3, 0)
        nameLabel.MaxDistance = math.huge

        local nameText = Instance.new("TextLabel")
        nameText.Size = UDim2.new(1, 0, 1, 0)
        nameText.Text = item.Name
        nameText.TextColor3 = Color3.fromRGB(0, 255, 0)
        nameText.BackgroundTransparency = 1
        nameText.TextStrokeTransparency = 0
        nameText.TextScaled = true
        nameText.Font = Enum.Font.SourceSansBold
        nameText.Parent = nameLabel

        nameLabel.Parent = item
        itemObjects[item] = nameLabel

        item.AncestryChanged:Connect(function()
            if not item:IsDescendantOf(game.Workspace) and itemObjects[item] then
                itemObjects[item]:Destroy()
                itemObjects[item] = nil
            end
        end)
    end
end

function ESP:updateESP()
    for _, player in pairs(game.Players:GetPlayers()) do
        if player ~= game.Players.LocalPlayer then
            if espEnabled then
                if not espObjects[player] then
                    self:createESP(player)
                end
            else
                if espObjects[player] then
                    espObjects[player]:Destroy()
                    espObjects[player] = nil
                end
            end
        end
    end

    if itemESPEnabled then
        for _, item in pairs(game.Workspace:GetDescendants()) do
            if item:IsA("BasePart") and item.Parent:FindFirstChild("TouchInterest") and not itemObjects[item] then
                self:createItemESP(item)
            end
        end
    else
        for _, gui in pairs(itemObjects) do
            gui:Destroy()
        end
        itemObjects = {}
    end
end

local togglePlayerESP = ESPTab:CreateButton({
    Name = "เปิด/ปิด ESP ผู้เล่น",
    Callback = function()
        espEnabled = not espEnabled
        ESP:updateESP()
    end
})

local toggleItemESP = ESPTab:CreateButton({
    Name = "เปิด/ปิด ESP สิ่งของ",
    Callback = function()
        itemESPEnabled = not itemESPEnabled
        ESP:updateESP()
    end
})

game:GetService("RunService").RenderStepped:Connect(function()
    if espEnabled or itemESPEnabled then
        ESP:updateESP()
    end
end)

game.Players.PlayerAdded:Connect(function(player)
    player.CharacterAdded:Connect(function()
        task.wait(1)
        if espEnabled then
            ESP:createESP(player)
        end
    end)
end)
local WalkspeedTab = Window:CreateTab("Walkthrough")

local noclipEnabled = false

local function toggleNoclip()
    noclipEnabled = not noclipEnabled
    game:GetService("RunService").Stepped:Connect(function()
        if noclipEnabled then
            for _, part in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
                if part:IsA("BasePart") then
                    part.CanCollide = false
                end
            end
        end
    end)
end

local toggleNoclipButton = WalkspeedTab:CreateButton({
    Name = "เปิด/ปิด เดินทะลุ",
    Callback = function()
        toggleNoclip()
    end
})

Rayfield:LoadConfiguration()
